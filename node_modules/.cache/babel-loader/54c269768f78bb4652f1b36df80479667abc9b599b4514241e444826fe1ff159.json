{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik singh\\\\Desktop\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport InputCity from './components/InputCity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputCity, setInputCity] = useState();\n  const [cityName, setCityName] = useState();\n  const [weatherData, setWeatherData] = useState({});\n  const [error, setError] = useState(false);\n\n  // input element Handler\n  const inputHandler = e => {\n    setInputCity(e.target.value);\n  };\n\n  // submit element handler\n  const submitHandler = e => {\n    e.preventDefault();\n    setError(false);\n    setCityName(inputCity);\n  };\n  // add API url\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid={{api_key_weather_app}}`;\n  {\n    const [weatherData, setWeatherData] = useState({});\n    const [inputCity, setInputCity] = useState(\"Seattle\");\n    const [cityName, setCityName] = useState(\"Seattle\");\n    const [error, setError] = useState(false);\n\n    //  Input element handler\n    const inputHandler = e => {\n      setInputCity(e.target.value);\n    };\n\n    //  Search button\n    const submitHandler = e => {\n      e.preventDefault();\n      setError(false);\n      setCityName(inputCity);\n    };\n\n    //  Weather API\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid={{api_key_weather_app}}`;\n\n    //  Fetching weather data\n    async function fetchData(URL) {\n      const response = await fetch(URL);\n      const data = await response.json();\n      if (data.cod === \"404\") {\n        setError(true);\n      } else {\n        setWeatherData(data);\n      }\n    }\n\n    // //HTTpGet, HttpPost\n    // function testData(url){\n    //   fetch(url).then( response => response.json())\n    // }\n\n    // //  To fetch weather data\n    // useEffect(() => {\n    //   fetchData(URL);\n    // }, [URL]);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InputCity, {\n        city: inputCity,\n        onInputHandler: inputHandler,\n        onSubmitHandler: submitHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ShowWeather, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this);\n  }\n  // function to call api\n  async function fetchData(URL) {\n    const response = await fetch(URL);\n    const data = await response.json();\n    if (data.cod === \"404\") {\n      setError(true);\n    } else {\n      setWeatherData(data);\n    }\n  }\n\n  // TO FETCH WEATHER DATA\n  useEffect(() => {\n    fetchData(URL);\n  }, [URL]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(InputCity, {\n      city: inputCity,\n      onInputHandler: inputHandler,\n      onSubmitHandler: submitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"lCVxMfVj1FHt6l52dxsFxwRUSPs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","InputCity","App","inputCity","setInputCity","cityName","setCityName","weatherData","setWeatherData","error","setError","inputHandler","e","target","value","submitHandler","preventDefault","URL","fetchData","response","fetch","data","json","cod"],"sources":["C:/Users/ritik singh/Desktop/weather-app/src/App.js"],"sourcesContent":["import React, {useState , useEffect} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport InputCity from './components/InputCity';\n\nfunction App() {\n  const [inputCity , setInputCity] = useState(); \n  const [cityName , setCityName] = useState();\n  const [weatherData, setWeatherData] = useState({});\n  const [error, setError] = useState(false);\n\n  // input element Handler\n  const inputHandler = (e) => {\n    setInputCity(e.target.value);\n  }\n\n  // submit element handler\n  const submitHandler =(e) => {\n    e.preventDefault();\n    setError(false);\n    setCityName(inputCity);\n  };\n    // add API url\n    const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid={{api_key_weather_app}}`;\n\n\n {\n  const [weatherData, setWeatherData] = useState({});\n  const [inputCity, setInputCity] = useState(\"Seattle\");\n  const [cityName, setCityName] = useState(\"Seattle\");\n  const [error, setError] = useState(false);\n\n  //  Input element handler\n  const inputHandler = (e) => {\n    setInputCity(e.target.value);\n  };\n\n  //  Search button\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setError(false);\n    setCityName(inputCity);\n  };\n\n  //  Weather API\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid={{api_key_weather_app}}`;\n  \n  //  Fetching weather data\n  async function fetchData(URL) {\n    const response = await fetch(URL);\n    const data = await response.json();\n    if (data.cod === \"404\") {\n      setError(true);\n    } else {\n      setWeatherData(data);\n    }\n  }\n\n  // //HTTpGet, HttpPost\n  // function testData(url){\n  //   fetch(url).then( response => response.json())\n  // }\n\n  // //  To fetch weather data\n  // useEffect(() => {\n  //   fetchData(URL);\n  // }, [URL]);\n\n  return (\n    <div>\n      <Header />\n\n      <InputCity\n        city={inputCity}\n        onInputHandler={inputHandler}\n        onSubmitHandler={submitHandler}\n      />\n      <ShowWeather data={weatherData}/>\n    </div>\n  );\n}\n    // function to call api\n    async function fetchData(URL) {\n        const response = await fetch(URL);\n        const data = await response.json();\n        if (data.cod === \"404\"){\n          setError(true);\n        }\n        else{\n          setWeatherData(data);\n        }\n    }\n    \n    // TO FETCH WEATHER DATA\n    useEffect(() => {\n      fetchData(URL);\n    },[URL]);\n  \n  return (\n    <>\n     <Header />\n     <InputCity city={inputCity} onInputHandler={inputHandler} \n     onSubmitHandler={submitHandler}/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}