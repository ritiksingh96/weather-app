{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ritik singh\\\\Desktop\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport InputCity from \"./Components/InputCity\";\nimport Header from \"./Components/Header\";\nimport \"./App.css\";\nimport ShowWeather from \"./Components/ShowWeather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(\"\");\n  const [inputCity, setInputCity] = useState(\"Seattle\");\n  const [cityName, setCityName] = useState(\"Seattle\");\n  const [error, setError] = useState(false);\n\n  //  Input element handler\n  const inputHandler = e => {\n    setInputCity(e.target.value);\n  };\n  //  Search button\n  const submitHandler = e => {\n    e.preventDefault();\n    setError(false);\n    setCityName(inputCity);\n  };\n\n  //  Weather API\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=b81a143c479a1155fa90ac077e36acd3`;\n\n  //  Fetching weather data\n  async function fetchData(URL) {\n    const response = await fetch(URL);\n    const data = await response.json();\n    if (data.cod === \"404\") {\n      setError(true);\n    } else {\n      setWeatherData(data);\n    }\n  }\n\n  //  To fetch weather data\n  useEffect(() => {\n    fetchData(URL);\n  }, [URL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"inpu\", {\n      city: inputCity,\n      onInputHandler: inputHandler,\n      onSubmitHandler: submitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"error\",\n      children: \"No data found :( \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ShowWeather, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XPZnSmag3jfnm8Hj/gHOWbTh18s=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","InputCity","Header","ShowWeather","App","weatherData","setWeatherData","inputCity","setInputCity","cityName","setCityName","error","setError","inputHandler","e","target","value","submitHandler","preventDefault","URL","fetchData","response","fetch","data","json","cod"],"sources":["C:/Users/ritik singh/Desktop/weather-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport InputCity from \"./Components/InputCity\";\nimport Header from \"./Components/Header\";\nimport \"./App.css\";\nimport ShowWeather from \"./Components/ShowWeather\"\n\nexport default function App() {\n  const [weatherData, setWeatherData] = useState(\"\");\n  const [inputCity, setInputCity] = useState(\"Seattle\");\n  const [cityName, setCityName] = useState(\"Seattle\");\n  const [error, setError] = useState(false);\n\n  //  Input element handler\n  const inputHandler = (e) => {\n    setInputCity(e.target.value);\n  };\n  //  Search button\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setError(false);\n    setCityName(inputCity);\n  };\n\n  //  Weather API\n  const URL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=b81a143c479a1155fa90ac077e36acd3`;\n\n  //  Fetching weather data\n  async function fetchData(URL) {\n\n\n    const response = await fetch(URL);\n    const data = await response.json();\n    if (data.cod === \"404\") {\n      setError(true);\n    } else {\n      setWeatherData(data);\n    }\n  }\n\n  //  To fetch weather data\n  useEffect(() => {\n    fetchData(URL);\n  }, [URL]);\n\n\n  return (\n    <div>\n      <Header />\n      <inpu\n        city={inputCity}\n        onInputHandler={inputHandler}\n        onSubmitHandler={submitHandler}\n      />\n      {error ? (\n        <h3 className=\"error\">No data found :( </h3>\n      ) : (\n          <ShowWeather data={weatherData} />\n        )}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,0BAA0B;AAAA;AAElD,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD;EACA,MAAMC,aAAa,GAAIH,CAAC,IAAK;IAC3BA,CAAC,CAACI,cAAc,EAAE;IAClBN,QAAQ,CAAC,KAAK,CAAC;IACfF,WAAW,CAACH,SAAS,CAAC;EACxB,CAAC;;EAED;EACA,MAAMY,GAAG,GAAI,qDAAoDV,QAAS,yCAAwC;;EAElH;EACA,eAAeW,SAAS,CAACD,GAAG,EAAE;IAG5B,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,IAAID,IAAI,CAACE,GAAG,KAAK,KAAK,EAAE;MACtBb,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,MAAM;MACLN,cAAc,CAACiB,IAAI,CAAC;IACtB;EACF;;EAEA;EACAxB,SAAS,CAAC,MAAM;IACdqB,SAAS,CAACD,GAAG,CAAC;EAChB,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAGT,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MACE,IAAI,EAAEZ,SAAU;MAChB,cAAc,EAAEM,YAAa;MAC7B,eAAe,EAAEI;IAAc;MAAA;MAAA;MAAA;IAAA,QAC/B,EACDN,KAAK,gBACJ;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,gBAE1C,QAAC,WAAW;MAAC,IAAI,EAAEN;IAAY;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEV;AAAC,GAtDuBD,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}